/*
 * Tomitribe Confidential
 *
 * Copyright Tomitribe Corporation. 2015
 *
 * The source code for this program is not published or otherwise divested
 * of its trade secrets, irrespective of what has been deposited with the
 * U.S. Copyright Office.
 */
package com.tomitribe.tsm.crest.interceptor;

import com.tomitribe.tsm.Tsm;
import com.tomitribe.tsm.command.junit.GitRule;
import org.junit.Rule;
import org.junit.Test;
import org.tomitribe.util.IO;

import java.io.File;
import java.util.Locale;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import static org.junit.Assume.assumeFalse;

public class LocalExecutionTest {
    @Rule
    public final GitRule git = new GitRule("target/LocalExecutionTest-git/", () -> "test", () -> -1);

    @Test
    public void local() throws Exception {
        assumeFalse(System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("windows"));

        git.addFile("simple/deployments.json",
                "{\"base\":\"" + new File("target/LocalExecutionTest/").getAbsolutePath() + "\"," +
                        "\"environments\":[{" +
                        "\"names\":[\"local\"]" +
                        "}]}");

        final File created = new File("target/LocalExecutionTest/simple/local/bin/setenv.sh");
        if (created.isFile()) {
            created.delete();
        }

        Tsm.main(new String[]{
                "--local", // what we test
                "application",
                "config-only",
                "simple",
                "--tomee-version=fake",
                "--java-version=fake",
                "--git.base=" + git.directory()
        });
        assertTrue(created.isFile());

        final String base = created.getParentFile().getParentFile().getParentFile().getParentFile().getAbsolutePath();
        assertEquals("#! /bin/sh\n" +
                "\n" +
                "# Generated by TSM, don't edit please\n" +
                "export JAVA_HOME=\"" + base + "/java/jdk-fake\"\n" +
                "export CATALINA_HOME=\"" + base + "/apache-tomee/apache-tomee-fake\"\n" +
                "export CATALINA_BASE=\"" + base + "/simple/local/\"\n" +
                "export CATALINA_PID=\"" + base + "/simple/local/work/tomee.pid\"\n" +
                "# End of TSM edit\n" +
                "\n", IO.slurp(created));
    }
}
